name: Deploy Terraform Infrastructure

on:
  push:
    branches:
      - main
      - task_2
  pull_request:
    branches:
      - main
      - task_2

jobs:
  terraform-check:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      # Step 3: Run Terraform check
      - name: Check Terraform format
        run: terraform fmt -check  # This command checks if the Terraform code is formatted correctly
  
  terraform-plan:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 4: Configure AWS credentials with role assumption
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}  # The IAM role ARN secret
          aws-region: ${{ secrets.AWS_REGION }}        # The AWS region secret
          audience: sts.amazonaws.com                  # OIDC audience for GitHub Actions to assume the role

      # Step 5: Run Terraform init
      - name: Terraform Init
        run: terraform init

      # Step 6: Run Terraform Plan
      - name: Terraform Plan
        run: terraform plan

  terraform-apply:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
